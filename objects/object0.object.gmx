<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0, 0, postprocess);
light_system_init();
caster_static_add(room_width * 0.5 - 32, room_height * 0.5 - 80, room_width * 0.5 + 32, room_height * 0.5 - 80);
dynacaster_center_x = room_width * 0.5;
dynacaster_center_y = room_height * 0.5 + 48;
dynacaster_angle = 0;
dynacaster_rotation = 180;
dynacaster = caster_dynamic_add(room_width * 0.5 - 32, room_height * 0.5 + 32, room_width * 0.5 + 32, room_height * 0.5 + 32);
view_rotation = 1;
vangle = 0;
var rx, ry, ra;
randomize();
repeat(0) {
    rx = floor(random(room_width));
    ry = floor(random(room_height));
    ra = random(360);
    caster_static_add(rx, ry, rx + lengthdir_x(64, ra), ry + lengthdir_y(64, ra));
}
repeat(0) {
    rx = floor(random(room_width));
    ry = floor(random(room_height));
    ra = random(360);
    caster_dynamic_add(rx, ry, rx + lengthdir_x(64, ra), ry + lengthdir_y(64, ra));
}
repeat(0) {
    light_static_add(spr_pointlight, 0, floor(random(room_width)), floor(random(room_height)), 1, 1, 0, make_color_hsv(floor(random(256)), floor(random(256)), floor(random(192)) + 64), 3);
}
repeat(0) {
    light_dynamic_add(spr_pointlight, 0, floor(random(room_width)), floor(random(room_height)), 1, 1, 0, make_color_hsv(floor(random(256)), floor(random(256)), floor(random(192)) + 64), 3, 0);
}
fire = light_static_add(spr_pointlight, 0, x, y, 0.5, 0.5, 0, make_color_hsv(25, 192, 255), 3);
fireglow = light_static_add(spr_firepit, 1, x, y, 1, 1, image_angle, c_white, 0);
fire_intensity = 0;
fire_on = 1;
dynalight = light_dynamic_add(spr_pointlight, 0, room_width * 0.5, room_height * 0.5, 1, 1, 0, make_color_hsv(25, 64, 255), 3, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dynacaster_angle = (dynacaster_angle + dynacaster_rotation * delta_time * 0.000001) mod 360;
vangle = (vangle + view_rotation * delta_time * 0.000001) mod 360;
view_angle[0] = (vangle);
fire_intensity = clamp(fire_intensity - 32 + round(random(64)), 160, 255);
fire_on = clamp(fire_on + (keyboard_check(vk_add) - keyboard_check(vk_subtract)) * delta_time * 0.000001, 0, 1);
light_static_blend_set(fire, make_color_hsv(25, 192, fire_intensity * fire_on));
light_static_blend_set(fireglow, make_color_hsv(25, 192, fire_intensity * fire_on));
light_static_enabled_set(fire, (fire_on &gt; 0));
light_static_enabled_set(fireglow, (fire_on &gt; 0));
caster_dynamic_position_set(dynacaster, dynacaster_center_x + vector_rotate_x(-32, 0, dynacaster_angle), dynacaster_center_y + vector_rotate_y(-32, 0, dynacaster_angle), dynacaster_center_x + vector_rotate_x(32, 0, dynacaster_angle), dynacaster_center_y + vector_rotate_y(32, 0, dynacaster_angle));
light_dynamic_position_set(dynalight, mouse_x, mouse_y);
//light_dynamic_move(dynalight, (keyboard_check(ord('D')) - keyboard_check(ord('A'))) * 4, (keyboard_check(ord('S')) - keyboard_check(ord('W'))) * 4);
light_dynamic_angle_set(dynalight, point_direction(light_dynamic_x_get(dynalight), light_dynamic_y_get(dynalight), mouse_x, mouse_y));
if(keyboard_check_pressed(ord('F'))) {
    light_dynamic_enabled_set(dynalight, !light_dynamic_enabled_get(dynalight));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>light_system_draw(0);
/*draw_set_colour(0);
caster_static_draw_all(light_dynamic_x_get(dynalight), light_dynamic_y_get(dynalight), 0, 0, 0, 0, 0);
caster_dynamic_draw_all(light_dynamic_x_get(dynalight), light_dynamic_y_get(dynalight), 0, 0, 0, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_firepit, 0, x, y);
draw_sprite_ext(spr_firepit, 1, x, y, 1, 1, 0, c_white, fire_intensity / 255 * fire_on);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
